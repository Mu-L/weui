/*!
 * WeUI v2.6.25 (https://github.com/weui/weui)
 * Copyright 2025 Tencent, Inc.
 * Licensed under the MIT license
 */
.wx-root,body {
  --weui-BG-COLOR-ACTIVE: #ececec;
}

.wx-root[data-weui-theme='dark'],body[data-weui-theme='dark'] {
  --weui-BG-COLOR-ACTIVE: #373737;
}

@media (prefers-color-scheme:dark) {
  .wx-root:not([data-weui-theme='light']),body:not([data-weui-theme='light']) {
    --weui-BG-COLOR-ACTIVE: #373737;
  }
}

body,.wx-root,page {
  --weui-BTN-HEIGHT: 48;
  --weui-BTN-HEIGHT-MEDIUM: 40;
  --weui-BTN-HEIGHT-SMALL: 32;
}

.wx-root,body {
  --weui-BTN-ACTIVE-MASK: rgba(0, 0, 0, 0.2);
}

.wx-root[data-weui-theme='dark'],body[data-weui-theme='dark'] {
  --weui-BTN-ACTIVE-MASK: rgba(255, 255, 255, 0.2);
}

@media (prefers-color-scheme:dark) {
  .wx-root:not([data-weui-theme='light']),body:not([data-weui-theme='light']) {
    --weui-BTN-ACTIVE-MASK: rgba(255, 255, 255, 0.2);
  }
}

.wx-root,body {
  --weui-BTN-DEFAULT-ACTIVE-BG: #e6e6e6;
}

.wx-root[data-weui-theme='dark'],body[data-weui-theme='dark'] {
  --weui-BTN-DEFAULT-ACTIVE-BG: rgba(255, 255, 255, 0.126);
}

@media (prefers-color-scheme:dark) {
  .wx-root:not([data-weui-theme='light']),body:not([data-weui-theme='light']) {
    --weui-BTN-DEFAULT-ACTIVE-BG: rgba(255, 255, 255, 0.126);
  }
}

.wx-root,body {
  --weui-DIALOG-LINE-COLOR: rgba(0, 0, 0, 0.1);
}

.wx-root[data-weui-theme='dark'],body[data-weui-theme='dark'] {
  --weui-DIALOG-LINE-COLOR: rgba(255, 255, 255, 0.1);
}

@media (prefers-color-scheme:dark) {
  .wx-root:not([data-weui-theme='light']),body:not([data-weui-theme='light']) {
    --weui-DIALOG-LINE-COLOR: rgba(255, 255, 255, 0.1);
  }
}

@-webkit-keyframes weuiSlideUp {
  from {
    -webkit-transform: translate3d(0,100%,0);
    transform: translate3d(0,100%,0);
  }

  to {
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }
}

@keyframes weuiSlideUp {
  from {
    -webkit-transform: translate3d(0,100%,0);
    transform: translate3d(0,100%,0);
  }

  to {
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }
}

.weui-animate_slide-up,.weui-animate-slide-up {
  -webkit-animation: weuiSlideUp ease 0.3s forwards;
  animation: weuiSlideUp ease 0.3s forwards;
}

@-webkit-keyframes weuiSlideDown {
  from {
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }

  to {
    -webkit-transform: translate3d(0,100%,0);
    transform: translate3d(0,100%,0);
  }
}

@keyframes weuiSlideDown {
  from {
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }

  to {
    -webkit-transform: translate3d(0,100%,0);
    transform: translate3d(0,100%,0);
  }
}

.weui-animate_slide-down,.weui-animate-slide-down {
  -webkit-animation: weuiSlideDown ease 0.3s forwards;
  animation: weuiSlideDown ease 0.3s forwards;
}

@-webkit-keyframes weuiFadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes weuiFadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.weui-animate_fade-in,.weui-animate-fade-in {
  -webkit-animation: weuiFadeIn ease 0.3s forwards;
  animation: weuiFadeIn ease 0.3s forwards;
}

@-webkit-keyframes weuiFadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes weuiFadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.weui-animate_fade-out,.weui-animate-fade-out {
  -webkit-animation: weuiFadeOut ease 0.3s forwards;
  animation: weuiFadeOut ease 0.3s forwards;
}

.weui-transition.weui-mask {
  -webkit-transition: opacity 0.3s,visibility 0.3s;
  transition: opacity 0.3s,visibility 0.3s;
  opacity: 0;
  visibility: hidden;
}

.weui-transition.weui-half-screen-dialog {
  -webkit-transition: -webkit-transform 0.3s;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s,-webkit-transform 0.3s;
  -webkit-transform: translateY(100%);
  transform: translateY(100%);
}

.weui-transition_show.weui-mask {
  opacity: 1;
  visibility: visible;
}

.weui-transition_show.weui-half-screen-dialog {
  -webkit-transform: translateY(0);
  transform: translateY(0);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
